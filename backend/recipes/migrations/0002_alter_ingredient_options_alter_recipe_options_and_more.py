# Generated by Django 4.2.7 on 2025-10-23 16:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('recipes', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='ingredient',
            options={'ordering': ['order', 'id'], 'verbose_name': 'Ingredient', 'verbose_name_plural': 'Ingredients'},
        ),
        migrations.AlterModelOptions(
            name='recipe',
            options={'ordering': ['-created_at'], 'verbose_name': 'Recipe', 'verbose_name_plural': 'Recipes'},
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='measurement',
            field=models.CharField(help_text="Measurement quantity and unit (e.g., '2 cups', '100g')", max_length=100),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='name',
            field=models.CharField(db_index=True, help_text='Ingredient name', max_length=200),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='order',
            field=models.PositiveIntegerField(default=0, help_text='Display order of ingredient in list', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='recipe',
            field=models.ForeignKey(help_text='Associated recipe', on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='recipes.recipe'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='cook_time',
            field=models.PositiveIntegerField(help_text='Cooking time in minutes (0-10080)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10080)]),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when recipe was created'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='description',
            field=models.TextField(blank=True, help_text='Detailed description of the recipe'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='difficulty',
            field=models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], db_index=True, default='easy', help_text='Recipe difficulty level', max_length=10),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='name',
            field=models.CharField(db_index=True, help_text='Name of the recipe', max_length=200),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='prep_time',
            field=models.PositiveIntegerField(help_text='Preparation time in minutes (0-10080)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10080)]),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp when recipe was last updated'),
        ),
        migrations.AddIndex(
            model_name='ingredient',
            index=models.Index(fields=['recipe', 'order'], name='ingredient_recipe_order_idx'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['-created_at', 'difficulty'], name='recipe_created_diff_idx'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['name', 'difficulty'], name='recipe_name_diff_idx'),
        ),
        migrations.AddConstraint(
            model_name='ingredient',
            constraint=models.CheckConstraint(check=models.Q(('order__gte', 0)), name='ingredient_order_positive'),
        ),
        migrations.AddConstraint(
            model_name='recipe',
            constraint=models.CheckConstraint(check=models.Q(('prep_time__gte', 0)), name='recipe_prep_time_positive'),
        ),
        migrations.AddConstraint(
            model_name='recipe',
            constraint=models.CheckConstraint(check=models.Q(('cook_time__gte', 0)), name='recipe_cook_time_positive'),
        ),
        migrations.AddConstraint(
            model_name='recipe',
            constraint=models.CheckConstraint(check=models.Q(('difficulty__in', ['easy', 'medium', 'hard'])), name='recipe_difficulty_valid'),
        ),
        migrations.AlterModelTable(
            name='ingredient',
            table='recipes_ingredient',
        ),
        migrations.AlterModelTable(
            name='recipe',
            table='recipes_recipe',
        ),
    ]
